# Generated by Django 2.2.7 on 2020-04-07 23:14

import django.contrib.postgres.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date of creation')),
                ('modified', models.DateTimeField(auto_now=True, null=True, verbose_name='Date of modification')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('created_by_hand', models.BooleanField(default=True, verbose_name='Created by hand')),
                ('beg_country', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('beg_region', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('beg_city', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('beg_address', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('end_country', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('end_region', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('end_city', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('end_address', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('lats_text', models.TextField(blank=True, default='[]', null=True, verbose_name='Lats')),
                ('long_text', models.TextField(blank=True, default='[]', null=True, verbose_name='Long')),
                ('alts_text', models.TextField(blank=True, default='[]', null=True, verbose_name='Alts')),
                ('lats', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, null=True, size=None)),
                ('long', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, null=True, size=None)),
                ('alts', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, null=True, size=None)),
                ('lengths', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), default=list, null=True, size=None)),
                ('total_length', models.FloatField(blank=True, null=True)),
                ('closed', models.BooleanField(default=False, verbose_name='Make first and last point coincide')),
                ('n_points', models.IntegerField(default=0, null=True)),
                ('line_type', models.CharField(blank=True, choices=[('path', 'Path'), ('border', 'Border'), ('canal', 'Canal'), ('river', 'River'), ('other', 'Other')], max_length=255, null=True, verbose_name='Type')),
                ('color', models.CharField(blank=True, max_length=255, null=True, verbose_name='Color')),
                ('is_global', models.BooleanField(default=True, verbose_name='Shown on all maps')),
                ('min_lat', models.FloatField(null=True)),
                ('max_lat', models.FloatField(null=True)),
                ('min_long', models.FloatField(null=True)),
                ('max_long', models.FloatField(null=True)),
            ],
            options={
                'verbose_name': 'Line',
                'ordering': ['pk'],
            },
        ),
    ]
